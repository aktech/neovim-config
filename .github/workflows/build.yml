name: Build and Test Neovim Configuration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nvim-version: ['v0.11.2']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y git curl build-essential

    - name: Install Neovim
      uses: rhysd/action-setup-vim@v1
      with:
        neovim: true
        version: ${{ matrix.nvim-version }}

    - name: Install Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'

    - name: Install Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.23'

    - name: Install language servers and tools
      run: |
        # Install npm packages
        npm install -g @microsoft/compose-language-service
        npm install -g bash-language-server

        # Install Go tools
        go install github.com/docker/docker-language-server/cmd/docker-language-server@latest

        # Install Python tools
        pip install pyrefly ruff

    - name: Create Neovim config directory
      run: |
        mkdir -p ~/.config/nvim
        cp -r . ~/.config/nvim/

    - name: Test Neovim configuration loading
      run: |
        nvim --headless -c 'lua print("Configuration loaded successfully")' -c 'qa!'

    - name: Test plugin installation
      run: |
        nvim --headless -c 'Lazy! restore' -c 'qa!' || true
        sleep 5
        nvim --headless -c 'Lazy! restore' -c 'qa!'

    - name: Verify core functionality
      run: |
        nvim --headless -c 'checkhealth lazy' -c 'qa!'
        nvim --headless -c 'lua vim.health.start()' -c 'qa!'